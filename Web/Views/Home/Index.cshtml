@using Web.ViewModels
@model MessageListViewModel

@{
    ViewData["Title"] = "Home Page";
}

<div class="container mt-5">
    <div class="card">
        <div class="card-header">
            <h3>Chat</h3>
        </div>
        <div class="card-body" style="height:500px; overflow-y:scroll;" id="chat-content">
            @*<div class="row mt-3">
                <div class="col-md-12">
                    <div class="card w-100" style="">
                        <div class="card-body">
                            <div class="card-title">
                                <h5 class="d-inline">Alex</h5>
                                <span class="d-inline text-muted ml-2">23:08</span>
                            </div>
                            <div class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</div>
                        </div>
                    </div>
                </div>
            </div>*@
            @foreach (var message in Model.Messages)
            {
                <div class="row mt-3">
                    <div class="col-md-12">
                        <div class="card w-100" style="">
                            <div class="card-body">
                                <div class="card-title">
                                    <h5 class="d-inline">@message.UserName</h5>
                                </div>
                                <div class="card-text">@message.Text</div>
                            </div>
                        </div>
                    </div>
                </div>
            }
     
        </div>
        <div class="card-footer">
            <form asp-action="Create" id="send-message-form">
                <div class="form-group">
                    <input asp-for="CreateModel.UserName" class="form-control" placeholder="Name">
                    <span asp-validation-for="CreateModel.UserName" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <button type="button" class="btn btn-default emodji" value=":-)">:-)</button>
                    <button type="button" class="btn btn-default emodji" value=":-(">:-(</button>
                    <button type="button" class="btn btn-default emodji" value=">:-(">>:-(</button>
                    <button type="button" class="btn btn-default emodji" value=":-<">:-<</button>
                    <button type="button" class="btn btn-default emodji" value="&-<">&-<</button>
                    <button type="button" class="btn btn-default emodji" value=">:-<">>:-<</button>

                </div>
                <div class="form-group">
                    <textarea asp-for="CreateModel.Text" class="form-control" rows="3" placeholder="Message"></textarea>
                    <span asp-validation-for="CreateModel.Text" class="text-danger"></span>
                </div>
                <div class="form-group text-right">
                    <button type="submit" class="btn btn-primary" id="send-btn">Send</button>
                </div>
            </form>
        </div>
    </div>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script type="text/javascript" src="~/lib/@@aspnet/signalr/dist/browser/signalr.min.js">

    </script>
    <script type="text/javascript">
        var objDiv = document.getElementById("chat-content");
        objDiv.scrollTop = objDiv.scrollHeight;

        $(".emodji").click(function () {
            var emodji = $(this).text();
            var text = $("#CreateModel_Text").val();
            text += " " + emodji;
            $("#CreateModel_Text").val(text);
        });

        $("#send-btn").click(function (e) {
            var form = $("#send-message-form");
            var isFormValid = form.valid();
            if (isFormValid) {
                $.post("@Url.Action("SendMessage", "Home")", {text: $("#CreateModel_Text").val(), userName: $("#CreateModel_UserName").val() })
            }
            return false;
        });

        let hubUrl = 'http://localhost:62019/chat';
        const hubConnection = new signalR.HubConnectionBuilder()
            .withUrl(hubUrl)
            .build();

        hubConnection.on('Receive', function (username, text) {
            var item = `
<div class="row mt-3">
    <div class="col-md-12">
        <div class="card w-100" style="">
            <div class="card-body">
                <div class="card-title">
                    <h5 class="d-inline">${username}</h5>
                </div>
                <div class="card-text">${text}</div>
            </div>
        </div>
    </div>
</div>
    `;
            $("#chat-content").append(item);
        });
        hubConnection.start();

    </script>
}


